<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>padding = 5;
slotSize = 68;
slots = 3;
borderWidth = 3;
innerColor = make_colour_rgb(64, 64, 64);
outerColor = c_black;
slotColor = make_color_rgb(128, 128, 128);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if mouse_check_button(mb_left) {
    makeDialog(string(window_mouse_get_x()) + ", " + string(window_mouse_get_y()));
    for (var i = 0; i &lt; slots; i += 1) {
        if (window_mouse_get_x())-240 &gt; posX + padding*(i+1) + slotSize*i and (window_mouse_get_x())-240 &lt; posX + padding*(i+1) + slotSize*(i+1) {
            if (window_mouse_get_y()) &gt; posY + padding and (window_mouse_get_y()) &lt; posY + padding + slotSize {
                if slot[i] != noone {
                    instance_create(Player.x, Player.y, slot[i]);
                    slot[i] = noone;
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; slots; i += 1) {
    slot[i] = noone;
}
width = slotSize*slots + padding*(slots+1);
height = slotSize + 2*padding;
posX = (window_get_height()*4/3) - width - 2*padding;
posY = window_get_height() - height - 2*padding;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(.5);

//Inventory
draw_roundrect_color(posX - borderWidth, posY - borderWidth, posX + width + borderWidth, posY + height + borderWidth, outerColor, outerColor, false);
draw_roundrect_color(posX, posY, posX + width, posY + height, innerColor, innerColor, false);
//Slots
for (var i = 0; i &lt; slots; i += 1) {
    draw_roundrect_color(posX + padding*(i+1) + slotSize*i, posY + padding, posX + padding*(i+1) + slotSize*(i+1), posY + padding + slotSize, slotColor, slotColor, false);
    if slot[i] != noone {
        draw_sprite_ext(object_get_sprite(slot[i]), 0, posX + padding*(i+1) + slotSize*i + (slotSize)/2, posY + padding + (slotSize)/2, 2, 2, 0, c_white, 1)
    }
}

draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
