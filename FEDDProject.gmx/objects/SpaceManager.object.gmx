<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (audio_is_playing(main)==false){
audio_stop_all();
audio_play_sound(main,1,true);
}

if (room=bossroom){
audio_stop_all();
audio_play_sound(bossmusic,1,true);
}

// instance_create(x-something*(roomsCleared+1),y+something*(roomsCleared+1),Asteroid); Asteriod.image_xscale = .05*r(roomsCleared+1); Asteroid.image_yscale = .05*(roomsCleared+1);

depth = 1000;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>width=background_get_width(star1);
right=view_xview[view_current]/width+view_wview[view_current]/width+1;
for (i=-1; i&lt;right; i++)
    {
        draw_background(star3, view_xview[view_current]/2 mod width+width*i,(view_yview[view_current]/1.5)-100);
        draw_background(star2, view_xview[view_current]/3 mod width+width*i,(view_yview[view_current]/3)+450);
        draw_background(star1, view_xview[view_current]/4 mod width+width*i,(view_yview[view_current]/3)+450);
        
    }
depth = 10;
if room = room0 {
draw_background(station,1006-375,610-375);
}
if room = bossroom {
draw_background(bossBack,1006-375,610-375);
}
depth = 1000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
