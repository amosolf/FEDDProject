<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Interactible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>defx = x;
range = 40;
wait = 1;
destination = defx;
friction = .2;
depth = -1000;
image_speed = 1/6;

cleared = false;

//gravity
grav = .4;
//friction
fric = 0.2;
//movement speed
spd = 3;

//maximum slope character can walk up (in degrees)
maxSlopeAngle = 60;

xvel = 0;
yvel = 0;

text[0] = noone;
myRoom = noone;
item = noone;


event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if(!collision_circle(x,y,32, Player, false, true))
{
    wait -= 1;
    if wait &lt;= 0{
        if x = destination {
            wait = irandom_range(60, 150);
            while destination = x and abs(x-destination) &lt; 30 {
                destination = irandom_range(defx - range, defx + range);
            }
            dir = (destination-x)/abs(destination-x);
        } else {
            x += dir*min(abs(x-destination), 1);
        }
    }
} else {
    wait = 1;
}

//If you're going to hit something in the next frame
if place_meeting(x + xvel, y, Foreground) {
    //if it's not a step (height &lt;= sprite_height/4)
    if place_meeting(x + xvel, y - sprite_height/4, Foreground) {
        //as long as you are moving
        if (xvel != 0) {
            //move until you hit the thing
            while !place_meeting(x + xvel/abs(xvel), y, Foreground) {
                //moves by 1 in the direction of xvel (+/-)
                x += xvel/abs(xvel);
            }
        }
        //stop
        xvel = 0;
    //if it is a step
    } else {
        //move up as necessary
        while place_meeting(x, y, Foreground) {
            y -= 1;
        }
    }
}
//repeat the same for y
if place_meeting(x, y + yvel, Foreground) {
    
    if (yvel != 0) {
        while !place_meeting(x, y + yvel/abs(yvel), Foreground) {
            y += yvel/abs(yvel);
        }
    }
    
    //if you're moving down (hitting the floor)
    if (yvel &gt; 0) {
        isGrounded = true;
    }
    
    //stop
    yvel = 0;
}
//if you're moving down (don't collide from the bottom)
if yvel &gt; 0 {
    //set this to the platform you're about to hit (whether it exists or not)
    platform = instance_place(x, y + yvel, Platform);
    //if it exists
    if instance_exists(platform) {
        //and you're above it
        if y + sprite_height / 2 &lt;= platform.y - platform.sprite_height / 2 {
            //move down until you meet it so you don't go through it
            while !place_meeting(x, y + 1, Platform) {
                y += 1;
            }
            
            isGrounded = true;
            //stop
            yvel = 0;            
        }
    }
}
//if you're walking up a ramp
if place_meeting(x, y + sprite_height/4, Foreground) &amp;&amp; yvel = 0 {
    //move down as necessary
    while !place_meeting(x, y, Foreground) {
        y += 1;
    }
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
